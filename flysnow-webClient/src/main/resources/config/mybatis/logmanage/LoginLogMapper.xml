<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flysnow.logmanage.dao.LoginLogDao">

	<sql id="LoginLogWhere">
		<if test="loginLogId != null">
            AND a.login_log_id=#{loginLogId}
		</if>
		<if test="userId != null">
            AND a.user_id=#{userId}
		</if>
		<if test="userAccount != null">
            AND a.user_account=#{userAccount}
		</if>
		<if test="userName != null">
            AND a.user_name=#{userName}
		</if>
		<if test="loginIp != null">
            AND a.login_ip=#{loginIp}
		</if>
		<if test="loginMac != null">
            AND a.login_mac=#{loginMac}
		</if>
		<if test="loginType != null">
            AND a.login_type=#{loginType}
		</if>
		<if test="loginTime != null">
            AND a.login_time=#{loginTime}
		</if>
		<if test="quitTime != null">
            AND a.quit_time=#{quitTime}
		</if>
	</sql>
	
	<sql id="LoginLogModifyWhere">
		<if test="where.loginLogId != null">
            AND login_log_id=#{where.loginLogId}
		</if>
		<if test="where.userId != null">
            AND user_id=#{where.userId}
		</if>
		<if test="where.userAccount != null">
            AND user_account=#{where.userAccount}
		</if>
		<if test="where.userName != null">
            AND user_name=#{where.userName}
		</if>
		<if test="where.loginIp != null">
            AND login_ip=#{where.loginIp}
		</if>
		<if test="where.loginMac != null">
            AND login_mac=#{where.loginMac}
		</if>
		<if test="where.loginType != null">
            AND login_type=#{where.loginType}
		</if>
		<if test="where.loginTime != null">
            AND login_time=#{where.loginTime}
		</if>
		<if test="where.quitTime != null">
            AND quit_time=#{where.quitTime}
		</if>
	</sql>
	
	<insert id="insertLoginLog" parameterType="loginLog">
		INSERT INTO auth_login_log (
        <trim prefix="" suffixOverrides=",">
			<if test="loginLogId != null">
				login_log_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="loginMac != null">
				login_mac,
			</if>
			<if test="loginType != null">
				login_type,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="quitTime != null">
				quit_time,
			</if>
		</trim>
		) VALUES (
        <trim prefix="" suffixOverrides=",">
	       	<if test="loginLogId != null">
				#{loginLogId},
			</if>
	       	<if test="userId != null">
				#{userId},
			</if>
	       	<if test="userAccount != null">
				#{userAccount},
			</if>
	       	<if test="userName != null">
				#{userName},
			</if>
	       	<if test="loginIp != null">
				#{loginIp},
			</if>
	       	<if test="loginMac != null">
				#{loginMac},
			</if>
	       	<if test="loginType != null">
				#{loginType},
			</if>
	       	<if test="loginTime != null">
				#{loginTime},
			</if>
	       	<if test="quitTime != null">
				#{quitTime},
			</if>
		</trim>
		)
	</insert>

    <delete id="deleteLoginLog" parameterType="loginLog">
        DELETE FROM auth_login_log
        <where>
            <include refid="LoginLogModifyWhere" />
        </where>
    </delete>

    <update id="updateLoginLog" parameterType="loginLog">
		UPDATE auth_login_log
        <set>
			<if test="loginLogId != null">
				login_log_id=#{loginLogId},
			</if>
			<if test="userId != null">
				user_id=#{userId},
			</if>
			<if test="userAccount != null">
				user_account=#{userAccount},
			</if>
			<if test="userName != null">
				user_name=#{userName},
			</if>
			<if test="loginIp != null">
				login_ip=#{loginIp},
			</if>
			<if test="loginMac != null">
				login_mac=#{loginMac},
			</if>
			<if test="loginType != null">
				login_type=#{loginType},
			</if>
			<if test="loginTime != null">
				login_time=#{loginTime},
			</if>
			<if test="quitTime != null">
				quit_time=#{quitTime},
			</if>
		</set>
        <where>
			<include refid="LoginLogModifyWhere" />
		</where>
	</update>

    <!-- 登录日志 (单条查询) -->
    <resultMap id="LoginLogResult" type="loginLog">
		<result column="login_log_id" property="loginLogId"/>
		<result column="user_id" property="userId"/>
		<result column="user_account" property="userAccount"/>
		<result column="user_name" property="userName"/>
		<result column="login_ip" property="loginIp"/>
		<result column="login_mac" property="loginMac"/>
		<result column="login_type" property="loginType"/>
		<result column="login_time" property="loginTime"/>
		<result column="quit_time" property="quitTime"/>
    </resultMap>
    <select id="getLoginLog" resultMap="LoginLogResult" parameterType="loginLog" >
        SELECT
			a.login_log_id,
			a.user_id,
			a.user_account,
			a.user_name,
			a.login_ip,
			a.login_mac,
			a.login_type,
			a.login_time,
			a.quit_time
        FROM auth_login_log a
        WHERE 1=1
        <trim prefix="" prefixOverrides="">
            <include refid="LoginLogWhere" />
        </trim>
    </select>

    <!-- 登录日志 (列表查询) -->
    <resultMap id="LoginLogListResult" type="loginLog">
		<result column="login_log_id" property="loginLogId"/>
		<result column="user_id" property="userId"/>
		<result column="user_account" property="userAccount"/>
		<result column="user_name" property="userName"/>
		<result column="login_ip" property="loginIp"/>
		<result column="login_mac" property="loginMac"/>
		<result column="login_type" property="loginType"/>
		<result column="login_time" property="loginTime"/>
		<result column="quit_time" property="quitTime"/>
    </resultMap>
	<select id="getLoginLogList" resultMap="LoginLogListResult" parameterType="loginLog" >
        SELECT
			a.login_log_id,
			a.user_id,
			a.user_account,
			a.user_name,
			a.login_ip,
			a.login_mac,
			a.login_type,
			a.login_time,
			a.quit_time
		FROM auth_login_log a
		WHERE 1=1
        <trim prefix="" prefixOverrides="">
            <include refid="LoginLogWhere" />
        </trim>
	</select>

    <!-- 登录日志 (分页查询) -->
    <resultMap id="LoginLogListPageResult" type="java.util.HashMap">
		<result column="login_log_id" property="loginLogId"/>
		<result column="user_id" property="userId"/>
		<result column="user_account" property="userAccount"/>
		<result column="user_name" property="userName"/>
		<result column="login_ip" property="loginIp"/>
		<result column="login_mac" property="loginMac"/>
		<result column="login_type" property="loginType"/>
		<result column="login_time" property="loginTime"/>
		<result column="quit_time" property="quitTime"/>
    </resultMap>
    <select id="getLoginLogListPage" resultMap="LoginLogListPageResult" parameterType="map" >
        SELECT
			a.login_log_id,
			a.user_id,
			a.user_account,
			a.user_name,
			a.login_ip,
			a.login_mac,
			a.login_type,
			a.login_time,
			a.quit_time
        FROM auth_login_log a
        WHERE 1=1
        <trim prefix="" prefixOverrides="">
            <include refid="LoginLogWhere" />
        </trim>
        <if test="pageSort != null">
            ORDER BY #{pageSort}
        </if>
    </select>

</mapper>